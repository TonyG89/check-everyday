{
  "resolvedId": "D:/js/work/Vue js/check-everyday/node_modules/vant/es/count-down/CountDown.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode } from \"vue\";\nimport { watch, computed, defineComponent } from \"vue\";\nimport { truthProp, makeStringProp, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nimport { parseFormat } from \"./utils.mjs\";\nimport { useCountDown } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nconst [name, bem] = createNamespace(\"count-down\");\nconst countDownProps = {\n  time: makeNumericProp(0),\n  format: makeStringProp(\"HH:mm:ss\"),\n  autoStart: truthProp,\n  millisecond: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: countDownProps,\n  emits: [\"change\", \"finish\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      start,\n      pause,\n      reset,\n      current\n    } = useCountDown({\n      time: +props.time,\n      millisecond: props.millisecond,\n      onChange: (current2) => emit(\"change\", current2),\n      onFinish: () => emit(\"finish\")\n    });\n    const timeText = computed(() => parseFormat(props.format, current.value));\n    const resetTime = () => {\n      reset(+props.time);\n      if (props.autoStart) {\n        start();\n      }\n    };\n    watch(() => props.time, resetTime, {\n      immediate: true\n    });\n    useExpose({\n      start,\n      pause,\n      reset: resetTime\n    });\n    return () => _createVNode(\"div\", {\n      \"role\": \"timer\",\n      \"class\": bem()\n    }, [slots.default ? slots.default(current.value) : timeText.value]);\n  }\n});\nexport {\n  countDownProps,\n  stdin_default as default\n};\n",
      "start": 1698392050391,
      "end": 1698392050482,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1698392050482,
      "end": 1698392050482,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1698392050482,
      "end": 1698392050482,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1698392050482,
      "end": 1698392050482,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1698392050482,
      "end": 1698392050482,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1698392050482,
      "end": 1698392050482,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1698392050482,
      "end": 1698392050482,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1698392050482,
      "end": 1698392050482,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1698392050482,
      "end": 1698392050482,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1698392050482,
      "end": 1698392050482,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1698392050482,
      "end": 1698392050482,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1698392050483,
      "end": 1698392050483,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1698392050483,
      "end": 1698392050483,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1698392050483,
      "end": 1698392050483,
      "order": "normal"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1698392050483,
      "end": 1698392050483,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1698392050483,
      "end": 1698392050483,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1698392050483,
      "end": 1698392050483,
      "order": "normal"
    }
  ]
}
